# Generated by Django 3.2.7 on 2021-10-06 09:43

from django.db import migrations, models
import django.utils.timezone
import src.accounts.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_alive', models.BooleanField(default=True)),
                ('username', models.CharField(help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[src.accounts.validators.username_validator])),
                ('first_name', models.CharField(blank=True, help_text='Users first name', max_length=30, validators=[src.accounts.validators.validate_name])),
                ('last_name', models.CharField(blank=True, help_text='Users last name', max_length=40, validators=[src.accounts.validators.validate_name])),
                ('email', models.EmailField(blank=True, help_text='Users email', max_length=254, unique=True)),
                ('age', models.PositiveIntegerField(help_text='Users age', null=True, validators=[src.accounts.validators.validate_age])),
                ('password', models.CharField(help_text='Users password', max_length=256, validators=[src.accounts.validators.validate_password])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
